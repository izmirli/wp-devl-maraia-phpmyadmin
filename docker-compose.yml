# Docker compose setup for development of WordPress 
# on LAMP (Linux, Apache, MariaDB & PHP) with phpMyAdmin.
#
# WordPress files will be under local ./wp-code folder.
# Database docker volume will be created to save install & wp changes.
# After 1st run, delete volume if you want a fresh install.
#
# Should have a local .env file with: MYSQL_ROOT_PASSWORD, 
# MYSQL_DATABASE, MYSQL_USER, MYSQL_PASSWORD.
#
# WordPress access by: http://localhost:8080/
# phpMyAdmin access by: http://localhost:8081/

version: "3.9"
name: wp-sys

services:

  database:
    image: mariadb    #current latest:11.6.2-noble
    restart: unless-stopped
    ports:
      - 3306:3306
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
    volumes:
     - wp-db-data:/var/lib/mysql
    networks:
      - wordpress-network
    # deploy:
    #   resources:
    #     limits:
    #       memory: 2048m

  phpmyadmin:
    depends_on:
      - database
    image: phpmyadmin
    restart: unless-stopped
    ports:
      - 8081:80
    env_file: .env
    environment:
      PMA_HOST: database
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
    networks:
      - wordpress-network

  wordpress:
    depends_on:
      - database
    image: wordpress  #current latest: 6.7.1-php8.2-apache
    restart: unless-stopped
    ports:
      - 8080:80
    env_file: .env
    environment:
      WORDPRESS_DB_HOST: database:3306 # use the same name as database service
      WORDPRESS_DB_NAME: '${MYSQL_DATABASE}'
      WORDPRESS_DB_USER: '${MYSQL_USER}'
      WORDPRESS_DB_PASSWORD: '${MYSQL_PASSWORD}'
    volumes:
      - ./wp-code:/var/www/html/
    networks:
      - wordpress-network

volumes:
  wp-db-data:

networks:
  wordpress-network:
    driver: bridge
